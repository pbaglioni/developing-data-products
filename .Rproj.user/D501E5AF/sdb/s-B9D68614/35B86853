{
    "contents" : "library(shiny)\nlibrary(ggplot2)\nlibrary(data.table)\nlibrary(maps)\nlibrary(rCharts)\nlibrary(reshape2)\nlibrary(markdown)\nlibrary(mapproj)\n\nstates_map <- map_data(\"state\")\ndt <- fread('data/events.agg.csv')\ndt$EVTYPE <- tolower(dt$EVTYPE)\nevtypes <<- sort(unique(dt$EVTYPE))\n\n\n\nshinyServer(function(input, output) \n{\n  dt.agg <- reactive({\n    tmp <- merge(\n      data.table(STATE=sort(unique(dt$STATE))),dt[YEAR >= input$range[1] & YEAR <= input$range[2] & EVTYPE %in% input$evtypes,\n                                                  list(COUNT=sum(COUNT),INJURIES=sum(INJURIES),FATALITIES=sum(FATALITIES),PROPDMG=round(sum(PROPDMG), 2),CROPDMG=round(sum(CROPDMG), 2)),\n                                                  by=list(STATE)],\n      by=c('STATE'), all=TRUE\n    )\n    tmp[is.na(tmp)] <- 0\n    tmp\n  })\n  \n  dt.agg.year <- reactive({dt[YEAR >= input$range[1] & YEAR <= input$range[2] & EVTYPE %in% input$evtypes,\n                              list(COUNT=sum(COUNT),INJURIES=sum(INJURIES),PROPDMG=round(sum(PROPDMG), 2),FATALITIES=sum(FATALITIES),CROPDMG=round(sum(CROPDMG), 2)),\n                              by=list(YEAR)]\n  })\n  \n  \n  output$populationImpactByState <- renderPlot(\n    {\n      data <- dt.agg()\n      if(input$populationCategory == 'both') {\n        data$Affected <- data$INJURIES + data$FATALITIES\n      } else if(input$populationCategory == 'fatalities') {\n        data$Affected <- data$FATALITIES\n      } else {\n        data$Affected <-data$INJURIES\n      }\n      \n      title <- paste(\"Population impact\", input$range[1], \"-\", input$range[2], \"(number of affected)\")\n      p <- ggplot(data, aes(map_id = STATE))\n      p <- p + geom_map(aes(fill = Affected), map = states_map, colour='grey') + expand_limits(x = states_map$long, y = states_map$lat)\n      p <- p + coord_map() + theme_bw()\n      p <- p + labs(x = \"Long\", y = \"Lat\", title = title)\n      print(p)\n    })\n  \n  output$economicImpactByState <- renderPlot({\n    data <- dt.agg()\n    \n    if(input$economicCategory == 'both') {\n      data$Damages <- data$PROPDMG + data$CROPDMG\n    } else if(input$economicCategory == 'crops') {\n      data$Damages <- data$CROPDMG\n    } else {\n      data$Damages <- data$PROPDMG\n    }\n    \n    title <- paste(\"Economic impact\", input$range[1], \"-\", input$range[2], \"(Million USD)\")\n    p <- ggplot(data, aes(map_id = STATE))\n    p <- p + geom_map(aes(fill = Damages), map = states_map, colour='grey') + expand_limits(x = states_map$long, y = states_map$lat)\n    p <- p + coord_map() + theme_bw()\n    p <- p + labs(x = \"Long\", y = \"Lat\", title = title)\n    print(p)\n  })\n  \n  output$evtypeControls <- renderUI({\n    if(1) {\n      checkboxGroupInput('evtypes', 'Event types', evtypes, selected=evtypes)\n    }\n  })\n  \n  dataTable <- reactive(\n    {\n      dt.agg()[, list(State=state.abb[match(STATE, tolower(state.name))],\n                      Count=COUNT,Injuries=INJURIES,Fatalities=FATALITIES,Property.damage=PROPDMG,Crops.damage=CROPDMG)]   \n    })\n  \n  output$table <- renderDataTable(\n    {\n      dataTable()}, options = list(bFilter = FALSE, iDisplayLength = 50))\n  \n  output$eventsByYear <- renderChart({\n    data <- dt.agg.year()[, list(COUNT=sum(COUNT)), by=list(YEAR)]\n    setnames(data, c('YEAR', 'COUNT'), c(\"Year\", \"Count\"))\n    \n    eventsByYear <- nPlot(Count ~ Year,data = data[order(data$Year)],type = \"lineChart\", dom = 'eventsByYear', width = 650)\n    \n    eventsByYear$chart(margin = list(left = 100))\n    eventsByYear$yAxis( axisLabel = \"Count\", width = 80)\n    eventsByYear$xAxis( axisLabel = \"Year\", width = 70)\n    return(eventsByYear)\n  })\n  \n  output$populationImpact <- renderChart({\n    data <- melt(dt.agg.year()[, list(Year=YEAR, Injuries=INJURIES, Fatalities=FATALITIES)],id='Year')\n    populationImpact <- nPlot(value ~ Year, group = 'variable', data = data[order(-Year, variable, decreasing = T)],\n                              type = 'stackedAreaChart', dom = 'populationImpact', width = 650)\n    \n    populationImpact$chart(margin = list(left = 100))\n    populationImpact$yAxis( axisLabel = \"Affected\", width = 80)\n    populationImpact$xAxis( axisLabel = \"Year\", width = 70)\n    \n    return(populationImpact)\n  })\n  \n  output$economicImpact <- renderChart({\n    data <- melt(dt.agg.year()[, list(Year=YEAR, Propety=PROPDMG, Crops=CROPDMG)],id='Year')\n    economicImpact <- nPlot(\n      value ~ Year, group = 'variable', data = data[order(-Year, variable, decreasing = T)],\n      type = 'stackedAreaChart', dom = 'economicImpact', width = 650\n    )\n    economicImpact$chart(margin = list(left = 100))\n    economicImpact$yAxis( axisLabel = \"Total damage (Million USD)\", width = 80)\n    economicImpact$xAxis( axisLabel = \"Year\", width = 70)\n    \n    return(economicImpact)\n  })\n  \n  output$downloadData <- downloadHandler(filename = 'data.csv',\n                                         content = function(file) \n                                         {\n                                           write.csv(dataTable(), file, row.names=FALSE)\n                                         }\n  )\n})",
    "created" : 1461854565527.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1708498817",
    "id" : "35B86853",
    "lastKnownWriteTime" : 1461859598,
    "path" : "C:/Users/baglioni/Desktop/developing-data-products-shiny/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}